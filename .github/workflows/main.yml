name: MS-PIPELINE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Compilar y test con Maven + cobertura
        run: mvn clean verify

      - name: Subir reporte Jacoco
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: user-service/target/site/jacoco/index.html

      - name: Analizar con SonarCloud
        run: |
          mvn sonar:sonar \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.projectKey=MatDev_MS-Gestion-Pedidos \
          -Dsonar.projectName=MS-Gestion-Pedidos

      - name: SonarCloud Quality Gate
        id: sonarcloud-check
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          scanMetadataReportFile: user-service/target/sonar/report-task.txt

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login a Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir y subir imagen de User Service
        run: |
          docker build -t user-service -f user-service/Dockerfile ./user-service
          docker tag user-service:latest ${{ secrets.DOCKER_USERNAME }}/user-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest


